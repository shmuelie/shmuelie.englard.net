{"version":3,"sources":["drop-in-blog/blog.ts"],"names":["getPosts","getPost","getAuthors","getCategories","searchPosts","Blog","constructor","blogId","oauthKey","this","options","query","id"],"mappings":"OAASA,aAA+B,oBAC/BC,YAAqB,mBACrBC,eAA0B,sBAC1BC,kBAA+B,yBAC/BC,gBAA8C,qBAGjD,MAAOC,KAIT,WAAAC,CAAYC,EAAgBC,GACxBC,KAAKF,OAASA,EACdE,KAAKD,SAAWA,CACpB,CAEA,gBAAMN,GACF,aAAaA,WAAWO,KAAKF,OAAQE,KAAKD,SAC9C,CAEA,cAAMR,CAASU,EAAmB,CAAA,GAC9B,aAAaV,SAASS,KAAKF,OAAQE,KAAKD,SAAUE,EACtD,CAEA,iBAAMN,CAAYO,GACd,aAAaP,YAAYK,KAAKF,OAAQE,KAAKD,SAAUG,EACzD,CAEA,mBAAMR,GACF,aAAaA,cAAcM,KAAKF,OAAQE,KAAKD,SACjD,CAEA,aAAMP,CAAQW,GACV,aAAaX,QAAQQ,KAAKF,OAAQE,KAAKD,SAAUI,EACrD","file":"blog.js","sourcesContent":["import { getPosts, Data, Options } from './posts.js';\nimport { getPost, Post } from './post.js';\nimport { getAuthors, Author } from './authors.js';\nimport { getCategories, Category } from './categories.js';\nimport { searchPosts, Query, Post as SearchPost } from './search.js';\nimport { ErrorResponse } from './request-helper.js';\n\nexport class Blog {\n    readonly blogId: string;\n    readonly oauthKey: string;\n\n    constructor(blogId: string, oauthKey: string) {\n        this.blogId = blogId;\n        this.oauthKey = oauthKey;\n    }\n\n    async getAuthors(): Promise<Author[] | ErrorResponse> {\n        return await getAuthors(this.blogId, this.oauthKey);\n    }\n\n    async getPosts(options: Options = {}): Promise<Data | ErrorResponse> {\n        return await getPosts(this.blogId, this.oauthKey, options);\n    }\n\n    async searchPosts(query: Query): Promise<SearchPost[] | ErrorResponse> {\n        return await searchPosts(this.blogId, this.oauthKey, query);\n    }\n\n    async getCategories(): Promise<Category[] | ErrorResponse> {\n        return await getCategories(this.blogId, this.oauthKey);\n    }\n\n    async getPost(id: number): Promise<Post | ErrorResponse | null> {\n        return await getPost(this.blogId, this.oauthKey, id);\n    }\n}"]}