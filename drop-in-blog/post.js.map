{"version":3,"sources":["drop-in-blog/post.ts","drop-in-blog/post.js"],"names":["orError","get","isError","async","getPost","blogId","oauthKey","id","_a","response","post"],"mappings":"OACwBA,QAASC,IAAKC,YAAe,6BAW9CC,eAAeC,QAAQC,EAAgBC,EAAkBC,GCV5D,IAAIC,EDWJ,MAAMC,EAAYT,cAA8BC,IAAcI,EAAQC,EAAU,SAASC,KAAO,CAAA,GAChG,OAAIL,QAAQO,GACDA,EAES,QAAbD,EAAAC,EAASC,YAAI,IAAAF,EAAAA,EAAI,IAC5B","file":"post.js","sourcesContent":["import { operations } from '../../data/dropinblog.api';\nimport { ErrorResponse, orError, get, isError } from './request-helper.js';\nimport { Post } from './schemas.js';\n\ntype Response = operations['posts-retrieve']['responses']['200']['content']['application/json'];\ntype Data = NonNullable<Response['data']>;\n\n/**\n * Retrieve a post\n * @param id The ID of the post.\n * @returns A post.Post on success; an ErrorResponse on error.\n */\nexport async function getPost(blogId: string, oauthKey: string, id: number): Promise<Post | ErrorResponse | null> {\n    const response =  orError<Data, Response>(await get<Response>(blogId, oauthKey, `posts/${id}`), {});\n    if (isError(response)) {\n        return response;\n    }\n    return response.post ?? null;\n}",null]}