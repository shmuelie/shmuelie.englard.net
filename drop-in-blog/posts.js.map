{"version":3,"sources":["drop-in-blog/posts.ts"],"names":["orError","get","async","getPosts","blogId","oauthKey","options","pagination","total","posts"],"mappings":"OACwBA,QAASC,QAAW,6BAWrCC,eAAeC,SAASC,EAAgBC,EAAkBC,EAAmB,CAAA,GAChF,OAAON,cAAuCC,IAAcG,EAAQC,EAAU,QAASC,GAA8B,CACjHC,WAAY,CACRC,MAAO,GAEXC,MAAO,IAEf","file":"posts.js","sourcesContent":["import { operations } from '../../data/dropinblog.api';\nimport { ErrorResponse, orError, get } from './request-helper.js';\n\nexport type Options = operations['posts-list']['parameters']['query'];\ntype Response = operations['posts-list']['responses']['200']['content']['application/json'];\nexport type PostsResponse = NonNullable<Response['data']>;\n\n/**\n * Fetch a paginated collection of posts. By default, only posts that are published and accessible to the public will be returned.\n * @param options Optional options for the request.\n * @returns A Data on success; an ErrorResponse on error.\n */\nexport async function getPosts(blogId: string, oauthKey: string, options: Options = {}): Promise<PostsResponse | ErrorResponse> {\n    return orError<PostsResponse, Response>(await get<Response>(blogId, oauthKey, 'posts', options as {[k:string]:any}), {\n        pagination: {\n            total: 0\n        },\n        posts: []\n    });\n}"]}