{"version":3,"sources":["drop-in-blog/search.ts","drop-in-blog/search.js"],"names":["orError","get","rootUrl","isError","async","searchPosts","query","_a","requestUrl","URL","queryMap","queryName","Object","keys","searchParams","append","response","posts"],"mappings":"OACwBA,QAASC,IAAKC,QAASC,YAAe,6BAavDC,eAAeC,YAAYC,GCZ9B,IAAIC,EDaJ,MAAMC,EAAkB,IAAIC,IAAI,GAAGP,kBAC7BQ,EAAWJ,EACjB,IAAK,MAAMK,KAAaC,OAAOC,KAAKP,GAChCE,EAAWM,aAAaC,OAAOJ,EAAWD,EAASC,IAEvD,MAAMK,EAAWhB,cAA8BC,IAAcO,GAAa,CACtES,MAAO,KAEX,OAAId,QAAQa,GACDA,EAEU,QAAdT,EAAAS,EAASC,aAAK,IAAAV,EAAAA,EAAI,EAC7B","file":"search.js","sourcesContent":["import { operations } from '../../data/dropinblog.api';\nimport { ErrorResponse, orError, get, rootUrl, isError } from './request-helper.js';\n\nexport type Query = operations['posts-search']['parameters']['query'];\nexport type Response = operations['posts-search']['responses']['200']['content']['application/json'];\nexport type Data = NonNullable<Response['data']>;\nexport type Post = NonNullable<Data['posts']>[0];\nexport type Author = NonNullable<NonNullable<Post>['author']>;\n\n/**\n * Search for posts.\n * @param query The search query.\n * @returns An array of posts on success; an ErrorResponse on error.\n */\nexport async function searchPosts(query: Query): Promise<Post[] | ErrorResponse> {\n    const requestUrl: URL = new URL(`${rootUrl}/search`);\n    const queryMap = query as {[k:string]:any};\n    for (const queryName of Object.keys(query)) {\n        requestUrl.searchParams.append(queryName, queryMap[queryName]);\n    }\n    const response = orError<Data, Response>(await get<Response>(requestUrl), {\n        posts: []\n    });\n    if (isError(response)) {\n        return response;\n    }\n    return response.posts ?? [];\n}",null]}